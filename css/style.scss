@mixin font-face($name, $file, $weight: normal, $style: normal) {
  @font-face {
    font-family: '#{$name}';
    src: url('../font/#{$file}.otf') format('otf'), url('../font/#{$file}.ttf') format('truetype');
    font-weight: $weight;
    font-style: $style;
  }
}

@include font-face('spoqa-sans', 'SpoqaHanSansNeo-Medium');
@include font-face('nixgon', 'NIXGONFONTS_L_2.0');

$black: #222222;
$gray: #999999;
$gray-light: #cccccc;
$white: #ffffff;
$violet: #98a2d6;
$mint: #70d3c2;
$coral: #ffa082;
//colors

$baseFont: 'spoqa-sans';
$headFont: 'nixgon';
// 폰트

$icons: arrow_top, arrow_bottom, arrow_left, arrow_right, arrow_dot, circle, ellipse, top_fill, top_line, x, blog, email, instagram, talk, twitter, location,
  star, user, birth, file, menu, plus;
// 아이콘 리스트

$baseSize: 10px;
@function unit($value) {
  @return $value / ($value * 0 + 1);
}
@function remSize($size) {
  $fontSize: unit($baseSize) * 0.1;
  @return #{$size * $fontSize}rem;
}
// px 단위 rem 으로 변환

@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}
// 비율 유지

@function headings($from, $to) {
  @if $from == $to {
    @return 'h#{$from}';
  } @else {
    @return 'h#{$from},' + headings($from + 1, $to);
  }
}
@for $i from 1 through 6 {
  $size: ($i + 1) * 0.5rem;
  h#{7-$i} {
    font-size: $size;
    font-weight: normal;
    margin: {
      top: $size * 0.8;
      bottom: $size * 0.8;
      left: 0;
      right: 0;
    }
  }
}
#{headings(1,3)} {
  font-family: $headFont;
  text-transform: uppercase;
  color: $coral;
}
